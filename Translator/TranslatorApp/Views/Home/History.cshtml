@{
    ViewData["Title"] = "History";
    ViewData["Filter text"] = "Close filters ▲";
}

<h1>@ViewData["Title"]</h1>
<div>
    <button id="clearSearchButton" type="submit" class="btn btn-primary" style="width: 150px; margin: 5px;">Clear filters</button>
</div>
<div id="history-container">
    <table class="table table-hover" id="myTable">
        <thead">
            <tr class="sticky-header" class="d-flex">
                <th class="col-4">User text</th>
                <th class="col-3">Language</th>
                <th class="col-4">Translated text</th>
                <th id="filterText" class="hover-effect" class="col-2" onclick="toggleRow()">@ViewData["Filter text"]</th>
            </tr>
        </thead>
        <tbody>
            <tr id="searchRow">
                <form id="searchForm" asp-action="SearchHistory">
                    <td><input id="userInputSearch" name="userInputSearch" type="text" placeholder="Search for text.." style="width:80%;"></td>
                    <td><input id="languageSearch" name="languageSearch" type="text" placeholder="Search for language.." style="width:80%;"></td>
                    <td><input id="translatedTextSearch" name="translatedTextSearch" type="text" placeholder="Search for translation.." style="width:80%;"></td>
                    <td><button type="submit" class="btn btn-primary" style="width: 70px;">Filter</button></td>
                </form>
            </tr>
            @if (Model.translations != null)
            {
                @foreach (var translation in Model.translations)
                {
                    <tr>
                        <td>@translation.UserInput</td>
                        <td>@translation.Language</td>
                        <td>@translation.TranslatedText</td>
                        <td></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">

    let isRowVisible = true;

    const toggleRow = () => {
        const row = document.getElementById("searchRow");
        const filterText = document.getElementById("filterText");

        isRowVisible = !isRowVisible;
        row.style.display = isRowVisible ? "" : "none";
        filterText.innerText = isRowVisible ? "Close filters ▲" : "Open filters ▼";
    };

    document.getElementById('clearSearchButton').addEventListener('click', function () {
        document.getElementById('userInputSearch').value = '';
        document.getElementById('languageSearch').value = '';
        document.getElementById('translatedTextSearch').value = '';

        document.getElementById('searchForm').submit();
    });
</script>

<style>
    #searchRow {
        position: sticky;
        top: 64px;
        background: white;
    }

    .sticky-header {
        height: 50px;
        position: sticky;
        top: 0;
        background: #a1a1a1
    }

    #history-container {
        height: 70vh;
        overflow-y: scroll;
    }

    .hover-effect {
        cursor: pointer;
    }

        .hover-effect:hover {
            background-color: #a8a8a8;
        }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

</style>